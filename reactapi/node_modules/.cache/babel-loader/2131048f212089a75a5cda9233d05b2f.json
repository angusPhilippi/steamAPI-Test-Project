{"ast":null,"code":"var _jsxFileName = \"C:\\\\steamAPI-Test-Project\\\\reactapi\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameCount: 0,\n      dataItems: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/IPlayerService/GetOwnedGames/v0001/?key=8BC89686A32E04B9D481E19A374608B6&steamid=76561198042185172&format=json`, {\n      \"headers\": {\n        \"Accept\": \"application.json\"\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        dataItems: json[1],\n        gameCount: json[0]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    var {\n      isLoaded,\n      dataItems\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" Loading Data... \");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, gameCount);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/steamAPI-Test-Project/reactapi/src/App.js"],"names":["React","Component","App","constructor","props","state","gameCount","dataItems","isLoaded","componentDidMount","fetch","then","res","json","setState","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CADA;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElBC,IAAAA,KAAK,CAAE,iHAAF,EACH;AACE,iBACA;AACE,kBAAU;AADZ;AAFF,KADG,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQE,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,SAAS,EAAEM,IAAI,CAAC,CAAD,CAFH;AAGZP,QAAAA,SAAS,EAAEO,IAAI,CAAC,CAAD;AAHH,OAAd;AAKD,KAdH,EAeGE,KAfH,CAeSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAjBH;AAkBD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEX,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAA0B,KAAKF,KAAnC;;AAEA,QAAI,CAACG,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,KAFD,MAGK;AACH,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,SADH,CADF;AAKD;AACF;;AA9CyB;;AAiD5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameCount: 0,\n      dataItems: [],\n      isLoaded: false,\n    }\n  }\n\n  componentDidMount() {\n\n    fetch(`/IPlayerService/GetOwnedGames/v0001/?key=8BC89686A32E04B9D481E19A374608B6&steamid=76561198042185172&format=json`,\n      {\n        \"headers\":\n        {\n          \"Accept\": \"application.json\"\n        }\n      })\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          dataItems: json[1],\n          gameCount: json[0] \n        })\n      })\n      .catch(err => {\n        console.log(err)\n      });\n  }\n\n  render() {\n    var { isLoaded, dataItems } = this.state;\n\n    if (!isLoaded) {\n      return <div> Loading Data... </div>\n    }\n    else {\n      return (\n        <div className=\"App\">\n          {gameCount}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}